{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "Config",
	"description": "The following is a list of all top-level bar config options.\n\nThese options can either be written at the very top object of your config, or within an object in the [monitors](#monitors) config, depending on your [use-case](#2-pick-your-use-case).",
	"type": "object",
	"properties": {
		"anchor_to_edges": {
			"description": "Whether to anchor the bar to the edges of the screen. Setting to false centers the bar.\n\n**Default**: `true`",
			"default": true,
			"type": "boolean"
		},
		"autohide": {
			"description": "The duration in milliseconds before the bar is hidden after the cursor leaves. Leave unset to disable auto-hide behaviour.\n\n**Default**: `null`",
			"default": null,
			"type": [
				"integer",
				"null"
			],
			"format": "uint64",
			"minimum": 0.0
		},
		"center": {
			"description": "An array of modules to append to the center of the bar.\n\n**Default**: `[]`",
			"type": [
				"array",
				"null"
			],
			"items": {
				"$ref": "#/definitions/ModuleConfig"
			}
		},
		"end": {
			"description": "An array of modules to append to the end of the bar. Depending on the orientation, this is either the bottom or right edge.\n\n**Default**: `[]`",
			"type": [
				"array",
				"null"
			],
			"items": {
				"$ref": "#/definitions/ModuleConfig"
			}
		},
		"exclusive_zone": {
			"description": "Whether the bar should reserve an exclusive zone around it.\n\nWhen true, this prevents windows from rendering in the same space as the bar, causing them to shift.\n\n**Default**: `true` unless `start_hidden` is set.",
			"default": null,
			"type": [
				"boolean",
				"null"
			]
		},
		"height": {
			"description": "The bar's height in pixels.\n\nNote that GTK treats this as a target minimum, and if content inside the bar is over this, it will automatically expand to fit.\n\n**Default**: `42`",
			"default": 42,
			"type": "integer",
			"format": "int32"
		},
		"icon_theme": {
			"description": "The name of the GTK icon theme to use. Leave unset to use the default Adwaita theme.\n\n**Default**: `null`",
			"type": [
				"string",
				"null"
			]
		},
		"ironvar_defaults": {
			"description": "A map of [ironvar](ironvar) keys and values to initialize Ironbar with on startup.\n\n**Default**: `{}`\n\n# Example\n\nThe following initializes an ironvar called `foo` set to `bar` on startup:\n\n```corn { ironvar_defaults.foo = \"bar\" } ```\n\nThe variable can then be immediately fetched without needing to be manually set:\n\n```sh $ ironbar get foo ok bar ```",
			"type": [
				"object",
				"null"
			],
			"additionalProperties": {
				"type": "string"
			}
		},
		"layer": {
			"description": "The layer-shell layer to place the bar on.\n\nTaken from the [wlr_layer_shell](https://wayland.app/protocols/wlr-layer-shell-unstable-v1#zwlr_layer_shell_v1:enum:layer) definition:\n\n> These values indicate which layers a surface can be rendered in. > They are ordered by z depth, bottom-most first. > Traditional shell surfaces will typically be rendered between the bottom and top layers. > Fullscreen shell surfaces are typically rendered at the top layer. > Multiple surfaces can share a single layer, and ordering within a single layer is undefined.\n\n**Valid options**: `background`, `bottom`, `top`, `overlay` <br> **Default**: `top`",
			"type": "string",
			"enum": [
				"background",
				"bottom",
				"top",
				"overlay"
			]
		},
		"margin": {
			"description": "The margin to use on each side of the bar, in pixels. Object which takes `top`, `bottom`, `left` and `right` keys.\n\n**Default**: `0` on all sides.\n\n# Example\n\nThe following would set a 10px margin around each edge.\n\n```corn { margin.top = 10 margin.bottom = 10 margin.left = 10 margin.right = 10 } ```",
			"allOf": [
				{
					"$ref": "#/definitions/MarginConfig"
				}
			]
		},
		"monitors": {
			"description": "A map of monitor names to configs.\n\nThe config values can be either:\n\n- a single object, which denotes a single bar for that monitor, - an array of multiple objects, which denotes multiple for that monitor.\n\nProviding this option overrides the single, global `bar` option.",
			"type": [
				"object",
				"null"
			],
			"additionalProperties": {
				"$ref": "#/definitions/MonitorConfig"
			}
		},
		"name": {
			"description": "A unique identifier for the bar, used for controlling it over IPC. If not set, uses a generated integer suffix.\n\n**Default**: `bar-n`",
			"type": [
				"string",
				"null"
			]
		},
		"popup_gap": {
			"description": "The size of the gap in pixels between the bar and the popup window.\n\n**Default**: `5`",
			"default": 5,
			"type": "integer",
			"format": "int32"
		},
		"position": {
			"description": "The bar's position on screen.\n\n**Valid options**: `top`, `bottom`, `left`, `right` <br> **Default**: `bottom`",
			"allOf": [
				{
					"$ref": "#/definitions/BarPosition"
				}
			]
		},
		"start": {
			"description": "An array of modules to append to the start of the bar. Depending on the orientation, this is either the top of the left edge.\n\n**Default**: `[]`",
			"type": [
				"array",
				"null"
			],
			"items": {
				"$ref": "#/definitions/ModuleConfig"
			}
		},
		"start_hidden": {
			"description": "Whether the bar should be hidden when Ironbar starts.\n\n**Default**: `false`, unless `autohide` is set.",
			"default": null,
			"type": [
				"boolean",
				"null"
			]
		}
	},
	"definitions": {
		"BarConfig": {
			"description": "The following is a list of all top-level bar config options.\n\nThese options can either be written at the very top object of your config, or within an object in the [monitors](#monitors) config, depending on your [use-case](#2-pick-your-use-case).",
			"type": "object",
			"properties": {
				"anchor_to_edges": {
					"description": "Whether to anchor the bar to the edges of the screen. Setting to false centers the bar.\n\n**Default**: `true`",
					"default": true,
					"type": "boolean"
				},
				"autohide": {
					"description": "The duration in milliseconds before the bar is hidden after the cursor leaves. Leave unset to disable auto-hide behaviour.\n\n**Default**: `null`",
					"default": null,
					"type": [
						"integer",
						"null"
					],
					"format": "uint64",
					"minimum": 0.0
				},
				"center": {
					"description": "An array of modules to append to the center of the bar.\n\n**Default**: `[]`",
					"type": [
						"array",
						"null"
					],
					"items": {
						"$ref": "#/definitions/ModuleConfig"
					}
				},
				"end": {
					"description": "An array of modules to append to the end of the bar. Depending on the orientation, this is either the bottom or right edge.\n\n**Default**: `[]`",
					"type": [
						"array",
						"null"
					],
					"items": {
						"$ref": "#/definitions/ModuleConfig"
					}
				},
				"exclusive_zone": {
					"description": "Whether the bar should reserve an exclusive zone around it.\n\nWhen true, this prevents windows from rendering in the same space as the bar, causing them to shift.\n\n**Default**: `true` unless `start_hidden` is set.",
					"default": null,
					"type": [
						"boolean",
						"null"
					]
				},
				"height": {
					"description": "The bar's height in pixels.\n\nNote that GTK treats this as a target minimum, and if content inside the bar is over this, it will automatically expand to fit.\n\n**Default**: `42`",
					"default": 42,
					"type": "integer",
					"format": "int32"
				},
				"icon_theme": {
					"description": "The name of the GTK icon theme to use. Leave unset to use the default Adwaita theme.\n\n**Default**: `null`",
					"type": [
						"string",
						"null"
					]
				},
				"layer": {
					"description": "The layer-shell layer to place the bar on.\n\nTaken from the [wlr_layer_shell](https://wayland.app/protocols/wlr-layer-shell-unstable-v1#zwlr_layer_shell_v1:enum:layer) definition:\n\n> These values indicate which layers a surface can be rendered in. > They are ordered by z depth, bottom-most first. > Traditional shell surfaces will typically be rendered between the bottom and top layers. > Fullscreen shell surfaces are typically rendered at the top layer. > Multiple surfaces can share a single layer, and ordering within a single layer is undefined.\n\n**Valid options**: `background`, `bottom`, `top`, `overlay` <br> **Default**: `top`",
					"type": "string",
					"enum": [
						"background",
						"bottom",
						"top",
						"overlay"
					]
				},
				"margin": {
					"description": "The margin to use on each side of the bar, in pixels. Object which takes `top`, `bottom`, `left` and `right` keys.\n\n**Default**: `0` on all sides.\n\n# Example\n\nThe following would set a 10px margin around each edge.\n\n```corn { margin.top = 10 margin.bottom = 10 margin.left = 10 margin.right = 10 } ```",
					"allOf": [
						{
							"$ref": "#/definitions/MarginConfig"
						}
					]
				},
				"name": {
					"description": "A unique identifier for the bar, used for controlling it over IPC. If not set, uses a generated integer suffix.\n\n**Default**: `bar-n`",
					"type": [
						"string",
						"null"
					]
				},
				"popup_gap": {
					"description": "The size of the gap in pixels between the bar and the popup window.\n\n**Default**: `5`",
					"default": 5,
					"type": "integer",
					"format": "int32"
				},
				"position": {
					"description": "The bar's position on screen.\n\n**Valid options**: `top`, `bottom`, `left`, `right` <br> **Default**: `bottom`",
					"allOf": [
						{
							"$ref": "#/definitions/BarPosition"
						}
					]
				},
				"start": {
					"description": "An array of modules to append to the start of the bar. Depending on the orientation, this is either the top of the left edge.\n\n**Default**: `[]`",
					"type": [
						"array",
						"null"
					],
					"items": {
						"$ref": "#/definitions/ModuleConfig"
					}
				},
				"start_hidden": {
					"description": "Whether the bar should be hidden when Ironbar starts.\n\n**Default**: `false`, unless `autohide` is set.",
					"default": null,
					"type": [
						"boolean",
						"null"
					]
				}
			}
		},
		"BarPosition": {
			"type": "string",
			"enum": [
				"top",
				"bottom",
				"left",
				"right"
			]
		},
		"DynamicBool": {
			"anyOf": [
				{
					"description": "Either a script or variable, to be determined.",
					"type": "string"
				},
				{
					"$ref": "#/definitions/Script"
				},
				{
					"type": "string"
				}
			]
		},
		"EllipsizeMode": {
			"type": "string",
			"enum": [
				"none",
				"start",
				"middle",
				"end"
			]
		},
		"Favorites": {
			"anyOf": [
				{
					"type": "object",
					"additionalProperties": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				{
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			]
		},
		"Icons": {
			"type": "object",
			"properties": {
				"caps_off": {
					"description": "Icon to show when capslock is disabled.\n\n**Default**: `\"\"`",
					"default": "",
					"type": "string"
				},
				"caps_on": {
					"description": "Icon to show when capslock is enabled.\n\n**Default**: `󰪛`",
					"default": "󰪛",
					"type": "string"
				},
				"layout_map": {
					"description": "Map of icons or labels to show for a particular keyboard layout.\n\nIf a layout is not present in the map, it will fall back to using its actual name.\n\n**Default**: `{}`\n\n# Example\n\n```corn { type = \"keyboard\" show_layout = true icons.layout_map.'English (US)' = \"EN\" icons.layout_map.Ukrainian = \"UA\" } ```",
					"default": {},
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"num_off": {
					"description": "Icon to show when num lock is disabled.\n\n**Default**: `\"\"`",
					"default": "",
					"type": "string"
				},
				"num_on": {
					"description": "Icon to show when num lock is enabled.\n\n**Default**: ``",
					"default": "",
					"type": "string"
				},
				"scroll_off": {
					"description": "Icon to show when scroll lock is disabled.\n\n**Default**: `\"\"`",
					"default": "",
					"type": "string"
				},
				"scroll_on": {
					"description": "Icon to show when scroll lock is enabled.\n\n**Default**: ``",
					"default": "",
					"type": "string"
				}
			}
		},
		"Icons2": {
			"type": "object",
			"properties": {
				"album": {
					"description": "Icon to display nex to album name.\n\n**Default**: `󰀥`",
					"default": "󰀥",
					"type": "string"
				},
				"artist": {
					"description": "Icon to display nex to artist name.\n\n**Default**: `󰠃`",
					"default": "󰠃",
					"type": "string"
				},
				"next": {
					"description": "Icon to display for next button.\n\n**Default**: `󰒭`",
					"default": "󰒭",
					"type": "string"
				},
				"pause": {
					"description": "Icon to display when paused.\n\n**Default**: ``",
					"default": "",
					"type": "string"
				},
				"play": {
					"description": "Icon to display when playing.\n\n**Default**: ``",
					"default": "",
					"type": "string"
				},
				"prev": {
					"description": "Icon to display for previous button.\n\n**Default**: `󰒮`",
					"default": "󰒮",
					"type": "string"
				},
				"track": {
					"description": "Icon to display nex to track title.\n\n**Default**: `󰎈`",
					"default": "󰎈",
					"type": "string"
				},
				"volume": {
					"description": "Icon to display under volume slider.\n\n**Default**: `󰕾`",
					"default": "󰕾",
					"type": "string"
				}
			}
		},
		"Icons3": {
			"type": "object",
			"properties": {
				"closed_dnd": {
					"description": "Icon to show when the panel is closed, with DnD enabled. Takes higher priority than count-based icons.\n\n**Default**: `󱅯`",
					"default": "󱅯",
					"type": "string"
				},
				"closed_none": {
					"description": "Icon to show when the panel is closed, with no notifications.\n\n**Default**: `󰍥`",
					"default": "󰍥",
					"type": "string"
				},
				"closed_some": {
					"description": "Icon to show when the panel is closed, with notifications.\n\n**Default**: `󱥂`",
					"default": "󱥂",
					"type": "string"
				},
				"open_dnd": {
					"description": "Icon to show when the panel is open, with DnD enabled. Takes higher priority than count-based icons.\n\n**Default**: `󱅮`",
					"default": "󱅮",
					"type": "string"
				},
				"open_none": {
					"description": "Icon to show when the panel is open, with no notifications.\n\n**Default**: `󰍡`",
					"default": "󰍡",
					"type": "string"
				},
				"open_some": {
					"description": "Icon to show when the panel is open, with notifications.\n\n**Default**: `󱥁`",
					"default": "󱥁",
					"type": "string"
				}
			}
		},
		"Icons4": {
			"type": "object",
			"properties": {
				"muted": {
					"description": "Icon to show for muted outputs.\n\n**Default**: `󰝟`",
					"default": "󰝟",
					"type": "string"
				},
				"volume_high": {
					"description": "Icon to show for high volume levels.\n\n**Default**: `󰕾`",
					"default": "󰕾",
					"type": "string"
				},
				"volume_low": {
					"description": "Icon to show for low volume levels.\n\n**Default**: `󰕿`",
					"default": "󰕿",
					"type": "string"
				},
				"volume_medium": {
					"description": "Icon to show for medium volume levels.\n\n**Default**: `󰖀`",
					"default": "󰖀",
					"type": "string"
				}
			}
		},
		"Interval": {
			"anyOf": [
				{
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				},
				{
					"$ref": "#/definitions/Intervals"
				}
			]
		},
		"Intervals": {
			"type": "object",
			"properties": {
				"cpu": {
					"description": "The number of seconds between refreshing CPU data.\n\n**Default**: `5`",
					"default": 5,
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				},
				"disks": {
					"description": "The number of seconds between refreshing disk data.\n\n**Default**: `5`",
					"default": 5,
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				},
				"memory": {
					"description": "The number of seconds between refreshing memory data.\n\n**Default**: `5`",
					"default": 5,
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				},
				"networks": {
					"description": "The number of seconds between refreshing network data.\n\n**Default**: `5`",
					"default": 5,
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				},
				"system": {
					"description": "The number of seconds between refreshing system data.\n\n**Default**: `5`",
					"default": 5,
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				},
				"temps": {
					"description": "The number of seconds between refreshing temperature data.\n\n**Default**: `5`",
					"default": 5,
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				}
			}
		},
		"MarginConfig": {
			"type": "object",
			"properties": {
				"bottom": {
					"default": 0,
					"type": "integer",
					"format": "int32"
				},
				"left": {
					"default": 0,
					"type": "integer",
					"format": "int32"
				},
				"right": {
					"default": 0,
					"type": "integer",
					"format": "int32"
				},
				"top": {
					"default": 0,
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"ModuleConfig": {
			"oneOf": [
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"path",
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"frequency": {
							"description": "The number of milliseconds between each draw call.\n\n**Default**: `200`",
							"default": 200,
							"type": "integer",
							"format": "uint64",
							"minimum": 0.0
						},
						"height": {
							"description": "The canvas height in pixels.\n\n**Default**: `42`",
							"default": 42,
							"type": "integer",
							"format": "uint32",
							"minimum": 0.0
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"path": {
							"description": "The path to the Lua script to load. This can be absolute, or relative to the working directory.\n\nThe script must contain the entry `draw` function.\n\n**Required**",
							"type": "string"
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"cairo"
							]
						},
						"width": {
							"description": "The canvas width in pixels.\n\n**Default**: `42`",
							"default": 42,
							"type": "integer",
							"format": "uint32",
							"minimum": 0.0
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"icon": {
							"description": "The icon to show on the bar widget button. Supports [image](images) icons.\n\n**Default**: `󰨸`",
							"default": "󰨸",
							"type": "string"
						},
						"icon_size": {
							"description": "The size to render the icon at. Note this only applies to image-type icons.\n\n**Default**: `32`",
							"default": 32,
							"type": "integer",
							"format": "int32"
						},
						"max_items": {
							"description": "The maximum number of items to keep in the history, and to show in the popup.\n\n**Default**: `10`",
							"default": 10,
							"type": "integer",
							"format": "uint",
							"minimum": 0.0
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"truncate": {
							"description": "See [truncate options](module-level-options#truncate-mode).\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/TruncateMode"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"clipboard"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"format": {
							"description": "The format string to use for the date/time shown on the bar. Pango markup is supported.\n\nDetail on available tokens can be found here: <https://docs.rs/chrono/latest/chrono/format/strftime/index.html>\n\n**Default**: `%d/%m/%Y %H:%M`",
							"default": "%d/%m/%Y %H:%M",
							"type": "string"
						},
						"format_popup": {
							"description": "The format string to use for the date/time shown in the popup header. Pango markup is supported.\n\nDetail on available tokens can be found here: <https://docs.rs/chrono/latest/chrono/format/strftime/index.html>\n\n**Default**: `%H:%M:%S`",
							"default": "%H:%M:%S",
							"type": "string"
						},
						"justify": {
							"description": "The justification (alignment) of the date/time shown on the bar.\n\n**Valid options**: `left`, `right`, `center`, `fill` <br> **Default**: `left`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleJustification"
								}
							]
						},
						"locale": {
							"description": "The locale to use when formatting dates.\n\nNote this will not control the calendar - for that you must set `LC_TIME`.\n\n**Valid options**: See [here](https://docs.rs/pure-rust-locales/0.8.1/pure_rust_locales/enum.Locale.html#variants) <br> **Default**: `$LC_TIME` or `$LANG` or `'POSIX'`",
							"default": "C",
							"type": "string"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"orientation": {
							"description": "The orientation to display the widget contents. Setting to vertical will rotate text 90 degrees.\n\n**Valid options**: `horizontal`, `vertical` <br> **Default**: `horizontal`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"clock"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"bar",
						"type"
					],
					"properties": {
						"bar": {
							"description": "Modules and widgets to add to the bar container.\n\n**Default**: `[]`",
							"type": "array",
							"items": {
								"$ref": "#/definitions/WidgetConfig"
							}
						},
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"popup": {
							"description": "Modules and widgets to add to the popup container.\n\n**Default**: `null`",
							"type": [
								"array",
								"null"
							],
							"items": {
								"$ref": "#/definitions/WidgetConfig"
							}
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"custom"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"icon_size": {
							"description": "Icon size in pixels.\n\n**Default**: `32`",
							"default": 32,
							"type": "integer",
							"format": "int32"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_icon": {
							"description": "Whether to show icon on the bar.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"show_title": {
							"description": "Whether to show app name on the bar.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"truncate": {
							"description": "See [truncate options](module-level-options#truncate-mode).\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/TruncateMode"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"focused"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"icon_size": {
							"description": "Size to render the icons at, in pixels (image icons only).\n\n**Default** `32`",
							"default": 32,
							"type": "integer",
							"format": "int32"
						},
						"icons": {
							"description": "Player state icons.\n\nSee [icons](#icons).",
							"allOf": [
								{
									"$ref": "#/definitions/Icons"
								}
							]
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"seat": {
							"description": "The Wayland seat to attach to. You almost certainly do not need to change this.\n\n**Default**: `seat0`",
							"default": "seat0",
							"type": "string"
						},
						"show_caps": {
							"description": "Whether to show capslock indicator.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"show_layout": {
							"description": "Whether to show the current keyboard layout.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"show_num": {
							"description": "Whether to show num lock indicator.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"show_scroll": {
							"description": "Whether to show scroll lock indicator.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"keyboard"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"label",
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"label": {
							"description": "The text to show on the label. This is a [Dynamic String](dynamic-values#dynamic-string).\n\n**Required**",
							"type": "string"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"label"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"favorites": {
							"description": "List of app IDs (or classes) to always show regardless of open state, in the order specified.\n\n**Default**: `null`",
							"type": [
								"array",
								"null"
							],
							"items": {
								"type": "string"
							}
						},
						"icon_size": {
							"description": "Size in pixels to render icon at (image icons only).\n\n**Default**: `32`",
							"default": 32,
							"type": "integer",
							"format": "int32"
						},
						"minimize_focused": {
							"description": "Whether to minimize a window if it is focused when clicked.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"reversed": {
							"description": "Whether items should be added from right-to-left instead of left-to-right.\n\nThis includes favourites.\n\n**Default**: `false`",
							"default": false,
							"type": "boolean"
						},
						"show_icons": {
							"description": "Whether to show application icons on the bar.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"show_names": {
							"description": "Whether to show application names on the bar.\n\n**Default**: `false`",
							"default": false,
							"type": "boolean"
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"truncate": {
							"description": "Truncate application names on the bar if they get too long. See [truncate options](module-level-options#truncate-mode).\n\n**Default**: `Auto (end)`",
							"allOf": [
								{
									"$ref": "#/definitions/TruncateMode"
								}
							]
						},
						"truncate_popup": {
							"description": "Truncate application names in popups if they get too long. See [truncate options](module-level-options#truncate-mode).\n\n**Default**: `{ mode = \"middle\" max_length = 25 }`",
							"allOf": [
								{
									"$ref": "#/definitions/TruncateMode"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"launcher"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"cover_image_size": {
							"description": "Size to render the album art image at inside the popup, in pixels.\n\n**Default**: `128`",
							"default": 128,
							"type": "integer",
							"format": "int32"
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"format": {
							"description": "Format of current song info to display on the bar.\n\nInfo on formatting tokens [below](#formatting-tokens).\n\n**Default**: `{title} / {artist}`",
							"default": "{title} / {artist}",
							"type": "string"
						},
						"host": {
							"description": "*[MPD Only]* TCP or Unix socket address of the MPD server. For TCP, this should include the port number.\n\n**Default**: `localhost:6600`",
							"default": "localhost:6600",
							"type": "string"
						},
						"icon_size": {
							"description": "Size to render the icons at, in pixels (image icons only).\n\n**Default** `32`",
							"default": 24,
							"type": "integer",
							"format": "int32"
						},
						"icons": {
							"description": "Player state icons.\n\nSee [icons](#icons).",
							"allOf": [
								{
									"$ref": "#/definitions/Icons2"
								}
							]
						},
						"music_dir": {
							"description": "*[MPD Only]* Path to root of the MPD server's music directory. This is required for displaying album art.\n\n**Default**: `$HOME/Music`",
							"default": "/home/runner/Music",
							"type": "string"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"player_type": {
							"description": "Type of player to connect to",
							"allOf": [
								{
									"$ref": "#/definitions/PlayerType"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"show_status_icon": {
							"description": "Whether to show the play/pause status icon on the bar.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"truncate": {
							"description": "See [truncate options](module-level-options#truncate-mode).\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/TruncateMode"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"music"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"icon_size": {
							"default": 24,
							"type": "integer",
							"format": "int32"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"network_manager"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"icons": {
							"description": "SwayNC state icons.\n\nSee [icons](#icons).",
							"allOf": [
								{
									"$ref": "#/definitions/Icons3"
								}
							]
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_count": {
							"description": "Whether to show the current notification count.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"notifications"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"cmd",
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"cmd": {
							"description": "Path to script to execute.\n\nThis can be an absolute path, or relative to the working directory.\n\n**Required**",
							"type": "string"
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"interval": {
							"description": "Time in milliseconds between executions.\n\n**Default**: `5000`",
							"default": 5000,
							"type": "integer",
							"format": "uint64",
							"minimum": 0.0
						},
						"mode": {
							"description": "Script execution mode. See [modes](#modes) for more info.\n\n**Valid options**: `poll`, `watch` <br /> **Default**: `poll`",
							"allOf": [
								{
									"$ref": "#/definitions/ScriptMode"
								}
							]
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"script"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"format",
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"direction": {
							"description": "The orientation by which the labels are laid out.\n\n**Valid options**: `horizontal`, `vertical`, `h`, `v` <br> **Default** : `horizontal`",
							"anyOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								},
								{
									"type": "null"
								}
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"format": {
							"description": "List of strings including formatting tokens. For available tokens, see [below](#formatting-tokens).\n\n**Required**",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"interval": {
							"description": "Number of seconds between refresh.\n\nThis can be set as a global interval, or passed as an object to customize the interval per-system.\n\n**Default**: `5`",
							"allOf": [
								{
									"$ref": "#/definitions/Interval"
								}
							]
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"orientation": {
							"description": "The orientation of text for the labels.\n\n**Valid options**: `horizontal`, `vertical`, `h`, `v` <br> **Default** : `horizontal`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"sys_info"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"truncate": {
							"description": "See [truncate options](module-level-options#truncate-mode).\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/TruncateMode"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"sway_mode"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"direction": {
							"description": "The direction in which to pack tray icons.\n\n**Valid options**: `horizontal`, `vertical` <br> **Default**: `horizontal` for horizontal bars, `vertical` for vertical bars",
							"anyOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								},
								{
									"type": "null"
								}
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"icon_size": {
							"description": "Size in pixels to display the tray icons as.\n\n**Default**: `16`",
							"default": 16,
							"type": "integer",
							"format": "uint32",
							"minimum": 0.0
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"prefer_theme_icons": {
							"description": "Requests that icons from the theme be used over the item-provided item. Most items only provide one or the other so this will have no effect in most circumstances.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"tray"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"format": {
							"description": "The format string to use for the widget button label. For available tokens, see [below](#formatting-tokens).\n\n**Default**: `{percentage}%`",
							"default": "{percentage}%",
							"type": "string"
						},
						"icon_size": {
							"description": "The size to render the icon at, in pixels.\n\n**Default**: `24`",
							"default": 24,
							"type": "integer",
							"format": "int32"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"upower"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"format": {
							"description": "The format string to use for the widget button label. For available tokens, see [below](#formatting-tokens).\n\n**Default**: `{icon} {percentage}%`",
							"default": "{icon} {percentage}%",
							"type": "string"
						},
						"icons": {
							"description": "Volume state icons.\n\nSee [icons](#icons).",
							"allOf": [
								{
									"$ref": "#/definitions/Icons4"
								}
							]
						},
						"max_volume": {
							"description": "Maximum value to allow volume sliders to reach. Pulse supports values > 100 but this may result in distortion.\n\n**Default**: `100`",
							"default": 100.0,
							"type": "number",
							"format": "double"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"volume"
							]
						}
					}
				},
				{
					"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"all_monitors": {
							"description": "Whether to display workspaces from all monitors. When false, only shows workspaces on the current monitor.\n\n**Default**: `false`",
							"default": false,
							"type": "boolean"
						},
						"class": {
							"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"disable_popup": {
							"description": "Prevents the popup from opening on-click for this widget.",
							"default": false,
							"type": "boolean"
						},
						"favorites": {
							"description": "Workspaces which should always be shown. This can either be an array of workspace names, or a map of monitor names to arrays of workspace names.\n\n**Default**: `{}`\n\n# Example\n\n```corn // array format { type = \"workspaces\" favorites = [\"1\", \"2\", \"3\"] }\n\n// map format { type = \"workspaces\" favorites.DP-1 = [\"1\", \"2\", \"3\"] favorites.DP-2 = [\"4\", \"5\", \"6\"] } ```",
							"allOf": [
								{
									"$ref": "#/definitions/Favorites"
								}
							]
						},
						"hidden": {
							"description": "A list of workspace names to never show.\n\nThis may be useful for scratchpad/special workspaces, for example.\n\n**Default**: `[]`",
							"default": [],
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"icon_size": {
							"description": "The size to render icons at (image icons only).\n\n**Default**: `32`",
							"default": 32,
							"type": "integer",
							"format": "int32"
						},
						"name": {
							"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"name_map": {
							"description": "Map of actual workspace names to custom names.\n\nCustom names can be [images](images).\n\nIf a workspace is not present in the map, it will fall back to using its actual name.",
							"type": [
								"object",
								"null"
							],
							"additionalProperties": {
								"type": "string"
							}
						},
						"on_click_left": {
							"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_middle": {
							"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_click_right": {
							"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_enter": {
							"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_mouse_exit": {
							"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_down": {
							"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"on_scroll_up": {
							"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						},
						"show_if": {
							"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/DynamicBool"
								},
								{
									"type": "null"
								}
							]
						},
						"sort": {
							"description": "The method used for sorting workspaces.\n\n- `added` always appends to the end. - `label` sorts by displayed value. - `name` sorts by workspace name.\n\n**Valid options**: `added`, `label`, `name`. <br> **Default**: `label`",
							"allOf": [
								{
									"$ref": "#/definitions/SortOrder"
								}
							]
						},
						"tooltip": {
							"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"transition_duration": {
							"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
							"type": [
								"integer",
								"null"
							],
							"format": "uint32",
							"minimum": 0.0
						},
						"transition_type": {
							"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
							"anyOf": [
								{
									"$ref": "#/definitions/TransitionType"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"workspaces"
							]
						}
					}
				}
			]
		},
		"ModuleJustification": {
			"type": "string",
			"enum": [
				"left",
				"right",
				"center",
				"fill"
			]
		},
		"ModuleOrientation": {
			"type": "string",
			"enum": [
				"horizontal",
				"vertical"
			]
		},
		"MonitorConfig": {
			"oneOf": [
				{
					"type": "object",
					"required": [
						"Single"
					],
					"properties": {
						"Single": {
							"$ref": "#/definitions/BarConfig"
						}
					},
					"additionalProperties": false
				},
				{
					"type": "object",
					"required": [
						"Multiple"
					],
					"properties": {
						"Multiple": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/BarConfig"
							}
						}
					},
					"additionalProperties": false
				}
			]
		},
		"PlayerType": {
			"type": "string",
			"enum": [
				"mpd",
				"mpris"
			]
		},
		"Script": {
			"type": "object",
			"required": [
				"cmd"
			],
			"properties": {
				"cmd": {
					"type": "string"
				},
				"interval": {
					"default": 5000,
					"type": "integer",
					"format": "uint64",
					"minimum": 0.0
				},
				"mode": {
					"$ref": "#/definitions/ScriptMode"
				}
			}
		},
		"ScriptInput": {
			"anyOf": [
				{
					"type": "string"
				},
				{
					"$ref": "#/definitions/Script"
				}
			]
		},
		"ScriptMode": {
			"type": "string",
			"enum": [
				"poll",
				"watch"
			]
		},
		"SortOrder": {
			"oneOf": [
				{
					"description": "Shows workspaces in the order they're added",
					"type": "string",
					"enum": [
						"added"
					]
				},
				{
					"description": "Shows workspaces in the order of their displayed labels, accounting for any mappings supplied in `name_map`. In most cases, this is likely their number.\n\nWorkspaces are sorted numerically first, and named workspaces are added to the end in alphabetical order.",
					"type": "string",
					"enum": [
						"label"
					]
				},
				{
					"description": "Shows workspaces in the order of their real names, as supplied by the compositor. In most cases, this is likely their number.\n\nWorkspaces are sorted numerically first, and named workspaces are added to the end in alphabetical order.",
					"type": "string",
					"enum": [
						"name"
					]
				}
			]
		},
		"TransitionType": {
			"type": "string",
			"enum": [
				"none",
				"crossfade",
				"slide_start",
				"slide_end"
			]
		},
		"TruncateMode": {
			"description": "Some modules provide options for truncating text. This is controlled using a common `TruncateMode` type, which is defined below.\n\nThe option can be configured in one of two modes.\n\n**Default**: `Auto (end)`",
			"anyOf": [
				{
					"description": "Do not truncate content.\n\nSetting this option may cause excessively long content to overflow other widgets, shifting them off-screen.\n\n# Example\n\n```corn { truncate = \"off\" }",
					"type": "null"
				},
				{
					"description": "Auto mode lets GTK decide when to ellipsize.\n\nTo use this mode, set the truncate option to a string declaring the location to truncate text from and place the ellipsis.\n\n# Example\n\n```corn { truncate = \"start\" } ```\n\n**Valid options**: `start`, `middle`, `end` <br> **Default**: `end`",
					"allOf": [
						{
							"$ref": "#/definitions/EllipsizeMode"
						}
					]
				},
				{
					"description": "Length mode defines a fixed point at which to ellipsize.\n\nGenerally you will want to set only one of `length` or `max_length`, but you can set both if required.\n\n# Example\n\n```corn { truncate.mode = \"start\" truncate.length = 50 truncate.max_length = 70 } ```",
					"type": "object",
					"required": [
						"mode"
					],
					"properties": {
						"length": {
							"description": "The fixed width (in characters) of the widget.\n\nThe widget will be expanded to this width if it would have otherwise been smaller.\n\nLeave unset to let GTK automatically handle.\n\n**Default**: `null`",
							"type": [
								"integer",
								"null"
							],
							"format": "int32"
						},
						"max_length": {
							"description": "The maximum number of characters to show before truncating.\n\nLeave unset to let GTK automatically handle.\n\n**Default**: `null`",
							"type": [
								"integer",
								"null"
							],
							"format": "int32"
						},
						"mode": {
							"description": "The location to truncate text from and place the ellipsis. **Valid options**: `start`, `middle`, `end` <br> **Default**: `null`",
							"allOf": [
								{
									"$ref": "#/definitions/EllipsizeMode"
								}
							]
						}
					}
				}
			]
		},
		"Widget": {
			"oneOf": [
				{
					"description": "A container to place nested widgets inside.",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Widget class name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"name": {
							"description": "Widget name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"orientation": {
							"description": "Whether child widgets should be horizontally or vertically added.\n\n**Valid options**: `horizontal`, `vertical`, `h`, `v` <br /> **Default**: `horizontal`",
							"anyOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								},
								{
									"type": "null"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"box"
							]
						},
						"widgets": {
							"description": "Modules and widgets to add to this box.\n\n**Default**: `null`",
							"type": [
								"array",
								"null"
							],
							"items": {
								"$ref": "#/definitions/WidgetConfig"
							}
						}
					}
				},
				{
					"description": "A text label. Pango markup is supported.",
					"type": "object",
					"required": [
						"label",
						"type"
					],
					"properties": {
						"class": {
							"description": "Widget class name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"justify": {
							"description": "The justification (alignment) of the label text.\n\n**Valid options**: `left`, `right`, `center`, `fill` <br> **Default**: `left`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleJustification"
								}
							]
						},
						"label": {
							"description": "Widget text label. Pango markup and embedded scripts are supported.\n\nThis is a [Dynamic String](dynamic-values#dynamic-string).\n\n**Required**",
							"type": "string"
						},
						"name": {
							"description": "Widget name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"orientation": {
							"description": "Orientation of the label. Setting to vertical will rotate text 90 degrees.\n\n**Valid options**: `horizontal`, `vertical`, `h`, `v` <br /> **Default**: `horizontal`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"label"
							]
						}
					}
				},
				{
					"description": "A clickable button, which can run a command when clicked.",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Widget class name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"label": {
							"description": "Widget text label. Pango markup and embedded scripts are supported.\n\nThis is a shorthand for adding a label widget to the button. Ignored if `widgets` is set.\n\nThis is a [Dynamic String](dynamic-values#dynamic-string).\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"name": {
							"description": "Widget name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_click": {
							"description": "Command to execute. More on this [below](#commands).\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"orientation": {
							"description": "Orientation of the button.\n\n**Valid options**: `horizontal`, `vertical`, `h`, `v` <br /> **Default**: `horizontal`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"button"
							]
						},
						"widgets": {
							"description": "Modules and widgets to add to this box.\n\n**Default**: `null`",
							"type": [
								"array",
								"null"
							],
							"items": {
								"$ref": "#/definitions/WidgetConfig"
							}
						}
					}
				},
				{
					"description": "An image or icon from disk or http.",
					"type": "object",
					"required": [
						"src",
						"type"
					],
					"properties": {
						"class": {
							"description": "Widget class name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"name": {
							"description": "Widget name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"size": {
							"description": "The width/height of the image. Aspect ratio is preserved.\n\n**Default**: `32`",
							"default": 32,
							"type": "integer",
							"format": "int32"
						},
						"src": {
							"description": "Image source.\n\nThis is an [image](image) via [Dynamic String](dynamic-values#dynamic-string).\n\n**Required**",
							"type": "string"
						},
						"type": {
							"type": "string",
							"enum": [
								"image"
							]
						}
					}
				},
				{
					"description": "A draggable slider.",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Widget class name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"length": {
							"description": "The slider length. GTK will automatically determine the size if left blank.\n\n**Default**: `null`",
							"type": [
								"integer",
								"null"
							],
							"format": "int32"
						},
						"max": {
							"description": "Maximum slider value.\n\n**Default**: `100`",
							"default": 100.0,
							"type": "number",
							"format": "double"
						},
						"min": {
							"description": "Minimum slider value.\n\n**Default**: `0`",
							"default": 0.0,
							"type": "number",
							"format": "double"
						},
						"name": {
							"description": "Widget name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"on_change": {
							"description": "Command to execute when the slider changes. More on this [below](#slider).\n\nNote that this will provide the floating point value as an argument. If your input program requires an integer, you will need to round it.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"orientation": {
							"description": "Orientation of the slider.\n\n**Valid options**: `horizontal`, `vertical`, `h`, `v` <br /> **Default**: `horizontal`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								}
							]
						},
						"show_label": {
							"description": "Whether to show the value label above the slider.\n\n**Default**: `true`",
							"default": true,
							"type": "boolean"
						},
						"step": {
							"description": "If the increment to change when scrolling with the mousewheel. If left blank, GTK will use the default value, determined by the current environment.\n\n**Default**: `null`",
							"type": [
								"number",
								"null"
							],
							"format": "double"
						},
						"type": {
							"type": "string",
							"enum": [
								"slider"
							]
						},
						"value": {
							"description": "Script to run to get the slider value. Output must be a valid number.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						}
					}
				},
				{
					"description": "A progress bar.",
					"type": "object",
					"required": [
						"type"
					],
					"properties": {
						"class": {
							"description": "Widget class name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"label": {
							"description": "Text label to show for the progress bar.\n\nThis is a [Dynamic String](dynamic-values#dynamic-string).\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"length": {
							"description": "The progress bar length, in pixels. GTK will automatically determine the size if left blank.\n\n**Default**: `null`",
							"type": [
								"integer",
								"null"
							],
							"format": "int32"
						},
						"max": {
							"description": "The maximum progress bar value.\n\n**Default**: `100`",
							"default": 100.0,
							"type": "number",
							"format": "double"
						},
						"name": {
							"description": "Widget name.\n\n**Default**: `null`",
							"type": [
								"string",
								"null"
							]
						},
						"orientation": {
							"description": "Orientation of the progress bar.\n\n**Valid options**: `horizontal`, `vertical`, `h`, `v` <br /> **Default**: `horizontal`",
							"allOf": [
								{
									"$ref": "#/definitions/ModuleOrientation"
								}
							]
						},
						"type": {
							"type": "string",
							"enum": [
								"progress"
							]
						},
						"value": {
							"description": "Script to run to get the progress bar value. Output must be a valid percentage.\n\nNote that this expects a numeric value between `0`-`max` as output.\n\n**Default**: `null`",
							"anyOf": [
								{
									"$ref": "#/definitions/ScriptInput"
								},
								{
									"type": "null"
								}
							]
						}
					}
				}
			]
		},
		"WidgetConfig": {
			"description": "The following are module-level options which are present on **all** modules.\n\nEach module also provides options specific to its type. For details on those, check the relevant module documentation.\n\nFor information on the Script type, and embedding scripts in strings, see [here](script). For information on styling, please see the [styling guide](styling-guide).",
			"type": "object",
			"anyOf": [
				{
					"description": "A custom-module specific basic widget",
					"allOf": [
						{
							"$ref": "#/definitions/Widget"
						}
					]
				},
				{
					"description": "A native Ironbar module, such as `clock` or `focused`. All widgets are supported, including their popups.",
					"allOf": [
						{
							"$ref": "#/definitions/ModuleConfig"
						}
					]
				}
			],
			"properties": {
				"class": {
					"description": "Sets one or more CSS classes, allowing you to target it in CSS using `.class`.\n\nUnlike [name](#name), the `class` property is not expected to be unique.\n\n**Default**: `null`",
					"type": [
						"string",
						"null"
					]
				},
				"disable_popup": {
					"description": "Prevents the popup from opening on-click for this widget.",
					"default": false,
					"type": "boolean"
				},
				"name": {
					"description": "Sets the unique widget name, allowing you to target it in CSS using `#name`.\n\nIt is best practise (although not required) to ensure that the value is globally unique throughout the Ironbar instance to avoid clashes.\n\n**Default**: `null`",
					"type": [
						"string",
						"null"
					]
				},
				"on_click_left": {
					"description": "A [script](scripts) to run when the module is left-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null`\n\n# Example\n\n```corn { on_click_left = \"echo 'event' >> log.txt\" } ```",
					"anyOf": [
						{
							"$ref": "#/definitions/ScriptInput"
						},
						{
							"type": "null"
						}
					]
				},
				"on_click_middle": {
					"description": "A [script](scripts) to run when the module is middle-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_click_middle = \"echo 'event' >> log.txt\" } ```",
					"anyOf": [
						{
							"$ref": "#/definitions/ScriptInput"
						},
						{
							"type": "null"
						}
					]
				},
				"on_click_right": {
					"description": "A [script](scripts) to run when the module is right-clicked.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` /// # Example\n\n```corn { on_click_right = \"echo 'event' >> log.txt\" } ```",
					"anyOf": [
						{
							"$ref": "#/definitions/ScriptInput"
						},
						{
							"type": "null"
						}
					]
				},
				"on_mouse_enter": {
					"description": "A [script](scripts) to run when the cursor begins hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_enter = \"echo 'event' >> log.txt\" } ```",
					"anyOf": [
						{
							"$ref": "#/definitions/ScriptInput"
						},
						{
							"type": "null"
						}
					]
				},
				"on_mouse_exit": {
					"description": "A [script](scripts) to run when the cursor stops hovering over the module.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_mouse_exit = \"echo 'event' >> log.txt\" } ```",
					"anyOf": [
						{
							"$ref": "#/definitions/ScriptInput"
						},
						{
							"type": "null"
						}
					]
				},
				"on_scroll_down": {
					"description": "A [script](scripts) to run when the module is scrolled down on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_down = \"echo 'event' >> log.txt\" } ```",
					"anyOf": [
						{
							"$ref": "#/definitions/ScriptInput"
						},
						{
							"type": "null"
						}
					]
				},
				"on_scroll_up": {
					"description": "A [script](scripts) to run when the module is scrolled up on.\n\n**Supported script types**: `oneshot`. <br> **Default**: `null` # Example\n\n```corn { on_scroll_up = \"echo 'event' >> log.txt\" } ```",
					"anyOf": [
						{
							"$ref": "#/definitions/ScriptInput"
						},
						{
							"type": "null"
						}
					]
				},
				"show_if": {
					"description": "Shows the module only if the dynamic boolean evaluates to true.\n\nThis allows for modules to be dynamically shown or hidden based on custom events.\n\n**Default**: `null`",
					"anyOf": [
						{
							"$ref": "#/definitions/DynamicBool"
						},
						{
							"type": "null"
						}
					]
				},
				"tooltip": {
					"description": "Shows this text on hover. Supports embedding scripts between `{{double braces}}`.\n\nNote that full dynamic string support is not currently supported.\n\n**Default**: `null`",
					"type": [
						"string",
						"null"
					]
				},
				"transition_duration": {
					"description": "The length in milliseconds of the transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Default**: `250`",
					"type": [
						"integer",
						"null"
					],
					"format": "uint32",
					"minimum": 0.0
				},
				"transition_type": {
					"description": "The transition animation to use when showing/hiding the widget.\n\nNote this has no effect if `show_if` is not configured.\n\n**Valid options**: `slide_start`, `slide_end`, `crossfade`, `none` <br> **Default**: `slide_start`",
					"anyOf": [
						{
							"$ref": "#/definitions/TransitionType"
						},
						{
							"type": "null"
						}
					]
				}
			}
		}
	}
}
